// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render Signup component 1`] = `
<MockedProvider
  addTypename={false}
  mocks={
    Array [
      Object {
        "request": Object {
          "query": Object {
            "definitions": Array [
              Object {
                "directives": Array [],
                "kind": "OperationDefinition",
                "name": Object {
                  "kind": "Name",
                  "value": "signupUser",
                },
                "operation": "mutation",
                "selectionSet": Object {
                  "kind": "SelectionSet",
                  "selections": Array [
                    Object {
                      "alias": undefined,
                      "arguments": Array [
                        Object {
                          "kind": "Argument",
                          "name": Object {
                            "kind": "Name",
                            "value": "email",
                          },
                          "value": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "email",
                            },
                          },
                        },
                        Object {
                          "kind": "Argument",
                          "name": Object {
                            "kind": "Name",
                            "value": "password",
                          },
                          "value": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "password",
                            },
                          },
                        },
                        Object {
                          "kind": "Argument",
                          "name": Object {
                            "kind": "Name",
                            "value": "name",
                          },
                          "value": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "name",
                            },
                          },
                        },
                      ],
                      "directives": Array [],
                      "kind": "Field",
                      "name": Object {
                        "kind": "Name",
                        "value": "signupUser",
                      },
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "token",
                            },
                            "selectionSet": undefined,
                          },
                        ],
                      },
                    },
                  ],
                },
                "variableDefinitions": Array [
                  Object {
                    "defaultValue": undefined,
                    "kind": "VariableDefinition",
                    "type": Object {
                      "kind": "NamedType",
                      "name": Object {
                        "kind": "Name",
                        "value": "String",
                      },
                    },
                    "variable": Object {
                      "kind": "Variable",
                      "name": Object {
                        "kind": "Name",
                        "value": "email",
                      },
                    },
                  },
                  Object {
                    "defaultValue": undefined,
                    "kind": "VariableDefinition",
                    "type": Object {
                      "kind": "NamedType",
                      "name": Object {
                        "kind": "Name",
                        "value": "String",
                      },
                    },
                    "variable": Object {
                      "kind": "Variable",
                      "name": Object {
                        "kind": "Name",
                        "value": "password",
                      },
                    },
                  },
                  Object {
                    "defaultValue": undefined,
                    "kind": "VariableDefinition",
                    "type": Object {
                      "kind": "NamedType",
                      "name": Object {
                        "kind": "Name",
                        "value": "String",
                      },
                    },
                    "variable": Object {
                      "kind": "Variable",
                      "name": Object {
                        "kind": "Name",
                        "value": "name",
                      },
                    },
                  },
                ],
              },
            ],
            "kind": "Document",
            "loc": Object {
              "end": 161,
              "start": 0,
            },
          },
          "variables": Object {
            "email": "test@mail.com",
            "name": "Alex",
            "password": "asdas",
          },
        },
        "result": Object {
          "data": Object {
            "signupUser": Object {
              "token": "qwerty12",
            },
          },
        },
      },
      Object {
        "request": Object {
          "query": Object {
            "definitions": Array [
              Object {
                "directives": Array [],
                "kind": "OperationDefinition",
                "name": Object {
                  "kind": "Name",
                  "value": "signupUser",
                },
                "operation": "mutation",
                "selectionSet": Object {
                  "kind": "SelectionSet",
                  "selections": Array [
                    Object {
                      "alias": undefined,
                      "arguments": Array [
                        Object {
                          "kind": "Argument",
                          "name": Object {
                            "kind": "Name",
                            "value": "email",
                          },
                          "value": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "email",
                            },
                          },
                        },
                        Object {
                          "kind": "Argument",
                          "name": Object {
                            "kind": "Name",
                            "value": "password",
                          },
                          "value": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "password",
                            },
                          },
                        },
                        Object {
                          "kind": "Argument",
                          "name": Object {
                            "kind": "Name",
                            "value": "name",
                          },
                          "value": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "name",
                            },
                          },
                        },
                      ],
                      "directives": Array [],
                      "kind": "Field",
                      "name": Object {
                        "kind": "Name",
                        "value": "signupUser",
                      },
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "token",
                            },
                            "selectionSet": undefined,
                          },
                        ],
                      },
                    },
                  ],
                },
                "variableDefinitions": Array [
                  Object {
                    "defaultValue": undefined,
                    "kind": "VariableDefinition",
                    "type": Object {
                      "kind": "NamedType",
                      "name": Object {
                        "kind": "Name",
                        "value": "String",
                      },
                    },
                    "variable": Object {
                      "kind": "Variable",
                      "name": Object {
                        "kind": "Name",
                        "value": "email",
                      },
                    },
                  },
                  Object {
                    "defaultValue": undefined,
                    "kind": "VariableDefinition",
                    "type": Object {
                      "kind": "NamedType",
                      "name": Object {
                        "kind": "Name",
                        "value": "String",
                      },
                    },
                    "variable": Object {
                      "kind": "Variable",
                      "name": Object {
                        "kind": "Name",
                        "value": "password",
                      },
                    },
                  },
                  Object {
                    "defaultValue": undefined,
                    "kind": "VariableDefinition",
                    "type": Object {
                      "kind": "NamedType",
                      "name": Object {
                        "kind": "Name",
                        "value": "String",
                      },
                    },
                    "variable": Object {
                      "kind": "Variable",
                      "name": Object {
                        "kind": "Name",
                        "value": "name",
                      },
                    },
                  },
                ],
              },
            ],
            "kind": "Document",
            "loc": Object {
              "end": 161,
              "start": 0,
            },
          },
          "variables": Object {
            "email": "exists@mail.com",
            "name": "Alex",
            "password": "asdas",
          },
        },
        "result": Object {
          "errors": Array [
            [GraphQLError: User with email exists@mail.com already exists],
          ],
        },
      },
    ]
  }
>
  <ApolloProvider
    client={
      ApolloClient {
        "__operations_cache__": Map {},
        "cache": InMemoryCache {
          "addTypename": false,
          "cacheKeyRoot": CacheKeyNode {
            "children": null,
            "key": null,
          },
          "config": Object {
            "addTypename": false,
            "dataIdFromObject": [Function],
            "fragmentMatcher": HeuristicFragmentMatcher {},
          },
          "data": DepTrackingCache {
            "data": Object {},
            "depend": [Function],
          },
          "maybeBroadcastWatch": [Function],
          "optimistic": Array [],
          "silenceBroadcast": false,
          "storeReader": StoreReader {
            "cacheKeyRoot": CacheKeyNode {
              "children": null,
              "key": null,
            },
            "executeSelectionSet": [Function],
            "executeStoreQuery": [Function],
            "keyMaker": QueryKeyMaker {
              "cacheKeyRoot": CacheKeyNode {
                "children": null,
                "key": null,
              },
              "perQueryKeyMakers": Map {},
            },
          },
          "storeWriter": StoreWriter {},
          "typenameDocumentCache": Map {},
          "watches": Set {},
        },
        "defaultOptions": Object {},
        "disableNetworkFetches": false,
        "link": ApolloLink {
          "request": [Function],
        },
        "mutate": [Function],
        "query": [Function],
        "queryDeduplication": true,
        "reFetchObservableQueries": [Function],
        "resetStore": [Function],
        "resetStoreCallbacks": Array [],
        "ssrMode": false,
        "store": DataStore {
          "cache": InMemoryCache {
            "addTypename": false,
            "cacheKeyRoot": CacheKeyNode {
              "children": null,
              "key": null,
            },
            "config": Object {
              "addTypename": false,
              "dataIdFromObject": [Function],
              "fragmentMatcher": HeuristicFragmentMatcher {},
            },
            "data": DepTrackingCache {
              "data": Object {},
              "depend": [Function],
            },
            "maybeBroadcastWatch": [Function],
            "optimistic": Array [],
            "silenceBroadcast": false,
            "storeReader": StoreReader {
              "cacheKeyRoot": CacheKeyNode {
                "children": null,
                "key": null,
              },
              "executeSelectionSet": [Function],
              "executeStoreQuery": [Function],
              "keyMaker": QueryKeyMaker {
                "cacheKeyRoot": CacheKeyNode {
                  "children": null,
                  "key": null,
                },
                "perQueryKeyMakers": Map {},
              },
            },
            "storeWriter": StoreWriter {},
            "typenameDocumentCache": Map {},
            "watches": Set {},
          },
        },
        "version": "2.4.2",
        "watchQuery": [Function],
      }
    }
  >
    <Signup>
      <div>
        <h2
          className="signup__title"
        >
          Signup with email
        </h2>
        <Mutation
          mutation={
            Object {
              "definitions": Array [
                Object {
                  "directives": Array [],
                  "kind": "OperationDefinition",
                  "name": Object {
                    "kind": "Name",
                    "value": "signupUser",
                  },
                  "operation": "mutation",
                  "selectionSet": Object {
                    "kind": "SelectionSet",
                    "selections": Array [
                      Object {
                        "alias": undefined,
                        "arguments": Array [
                          Object {
                            "kind": "Argument",
                            "name": Object {
                              "kind": "Name",
                              "value": "email",
                            },
                            "value": Object {
                              "kind": "Variable",
                              "name": Object {
                                "kind": "Name",
                                "value": "email",
                              },
                            },
                          },
                          Object {
                            "kind": "Argument",
                            "name": Object {
                              "kind": "Name",
                              "value": "password",
                            },
                            "value": Object {
                              "kind": "Variable",
                              "name": Object {
                                "kind": "Name",
                                "value": "password",
                              },
                            },
                          },
                          Object {
                            "kind": "Argument",
                            "name": Object {
                              "kind": "Name",
                              "value": "name",
                            },
                            "value": Object {
                              "kind": "Variable",
                              "name": Object {
                                "kind": "Name",
                                "value": "name",
                              },
                            },
                          },
                        ],
                        "directives": Array [],
                        "kind": "Field",
                        "name": Object {
                          "kind": "Name",
                          "value": "signupUser",
                        },
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "token",
                              },
                              "selectionSet": undefined,
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "variableDefinitions": Array [
                    Object {
                      "defaultValue": undefined,
                      "kind": "VariableDefinition",
                      "type": Object {
                        "kind": "NamedType",
                        "name": Object {
                          "kind": "Name",
                          "value": "String",
                        },
                      },
                      "variable": Object {
                        "kind": "Variable",
                        "name": Object {
                          "kind": "Name",
                          "value": "email",
                        },
                      },
                    },
                    Object {
                      "defaultValue": undefined,
                      "kind": "VariableDefinition",
                      "type": Object {
                        "kind": "NamedType",
                        "name": Object {
                          "kind": "Name",
                          "value": "String",
                        },
                      },
                      "variable": Object {
                        "kind": "Variable",
                        "name": Object {
                          "kind": "Name",
                          "value": "password",
                        },
                      },
                    },
                    Object {
                      "defaultValue": undefined,
                      "kind": "VariableDefinition",
                      "type": Object {
                        "kind": "NamedType",
                        "name": Object {
                          "kind": "Name",
                          "value": "String",
                        },
                      },
                      "variable": Object {
                        "kind": "Variable",
                        "name": Object {
                          "kind": "Name",
                          "value": "name",
                        },
                      },
                    },
                  ],
                },
              ],
              "kind": "Document",
              "loc": Object {
                "end": 161,
                "start": 0,
              },
            }
          }
          variables={
            Object {
              "email": "",
              "name": "",
              "password": "",
            }
          }
        >
          <form
            autoComplete="off"
            onSubmit={[Function]}
          >
            <_default
              error={false}
              errorText=""
            >
              <div
                className="search-form__input-container"
              >
                <div
                  className="search-form__label-input"
                >
                  <input
                    className="signup__input"
                    name="email"
                    onChange={[Function]}
                    placeholder="Email"
                    type="text"
                    value=""
                  />
                </div>
                <div
                  className="search-form__error"
                >
                  <span
                    className="search-form__error-text"
                  />
                </div>
              </div>
            </_default>
            <_default
              error={false}
              errorText=""
            >
              <div
                className="search-form__input-container"
              >
                <div
                  className="search-form__label-input"
                >
                  <input
                    className="signup__input"
                    name="name"
                    onChange={[Function]}
                    placeholder="Name"
                    type="text"
                    value=""
                  />
                </div>
                <div
                  className="search-form__error"
                >
                  <span
                    className="search-form__error-text"
                  />
                </div>
              </div>
            </_default>
            <_default
              error={false}
              errorText=""
            >
              <div
                className="search-form__input-container"
              >
                <div
                  className="search-form__label-input"
                >
                  <input
                    className="signup__input"
                    name="password"
                    onChange={[Function]}
                    placeholder="Password"
                    type="password"
                    value=""
                  />
                </div>
                <div
                  className="search-form__error"
                >
                  <span
                    className="search-form__error-text"
                  />
                </div>
              </div>
            </_default>
            <_default
              error={false}
              errorText=""
            >
              <div
                className="search-form__input-container"
              >
                <div
                  className="search-form__label-input"
                >
                  <input
                    className="signup__input"
                    name="passwordConfirmation"
                    onChange={[Function]}
                    placeholder="Confirm password"
                    type="password"
                    value=""
                  />
                </div>
                <div
                  className="search-form__error"
                >
                  <span
                    className="search-form__error-text"
                  />
                </div>
              </div>
            </_default>
            <button
              className="search-form__submit-btn"
            >
              Submit
            </button>
          </form>
        </Mutation>
      </div>
    </Signup>
  </ApolloProvider>
</MockedProvider>
`;
